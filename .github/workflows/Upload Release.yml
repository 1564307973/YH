name: Upload Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

jobs:
  upload-release:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 查找版本文件夹并提取版本号
      - name: Find folders in the root directory
        id: find_folder
        run: |
          set -e  # 开启严格模式，遇到错误立即退出
          FOLDER_NAME=$(find . -maxdepth 1 -type d -name "版本-*" | sort -V | tail -n 1)
          if [ -z "$FOLDER_NAME" ]; then
            echo "No folder found that matches the pattern '版本-*'."
            exit 1
          fi
          VERSION=$(basename "$FOLDER_NAME" | sed 's/^版本-//')
          echo "Found folder: $FOLDER_NAME, version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "FOLDER_NAME=$FOLDER_NAME" >> $GITHUB_ENV

      # 检查 Release 是否已存在
      - name: Check if Release already exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e  # 遇到错误立即退出
          VERSION=${{ env.VERSION }}
          echo "Checking if release for version $VERSION exists..."
          RELEASE_EXISTS=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases" | \
            jq -r --arg VERSION "$VERSION" '.[] | select(.tag_name == $VERSION) | .id')

          if [ -n "$RELEASE_EXISTS" ]; then
            echo "Release for version $VERSION already exists. Skipping release creation."
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "No existing release found for version $VERSION. Proceeding with release."
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV

      # 创建 ZIP 文件（带版本号）
      - name: Create ZIP file with required files
        if: env.RELEASE_EXISTS == 'false'
        id: create_zip
        run: |
          set -e
          echo "Creating ZIP file for folder: ${{ env.FOLDER_NAME }}"
          ZIP_FILE="NetworkSetup-${{ env.VERSION }}.zip"
          zip -r $ZIP_FILE ${{ env.FOLDER_NAME }}/*
          echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV
          echo "Created ZIP file: $ZIP_FILE"

      # 创建 GitHub Release
      - name: Create GitHub Release
        if: env.RELEASE_EXISTS == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}  # Release 页面仅显示版本号
          body: ${{ env.VERSION }}  # Release 内容也显示版本号
          draft: false
          prerelease: false

      # 上传 ZIP 文件到 Release
      - name: Upload ZIP file to GitHub Release
        if: env.RELEASE_EXISTS == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_FILE }}
          asset_name: ${{ env.ZIP_FILE }}
          asset_content_type: application/zip

      # 打印信息：如果 Release 已存在
      - name: Log Existing Release
        if: env.RELEASE_EXISTS == 'true'
        run: echo "Release for version ${{ env.VERSION }} already exists. No further action is needed."
