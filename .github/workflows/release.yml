name: Upload Release

on:
  push:
    branches:
      - main  # 或者你希望监控的分支
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 8 * * *'  # 每天 UTC 时间 08:00 执行（注意：GitHub Actions 使用 UTC 时间）

jobs:
  upload-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find folders in the root directory
        id: find_folder
        run: |
          # 在仓库根目录查找所有以 "版本-" 开头的文件夹
          FOLDER_NAME=$(find . -maxdepth 1 -type d -name "版本-*" | head -n 1)  # 获取第一个符合条件的文件夹
          if [ -z "$FOLDER_NAME" ]; then
            echo "No folder found that matches the pattern '版本-*'."
            exit 1
          fi
          VERSION=$(basename "$FOLDER_NAME" | sed 's/^版本-//')  # 提取文件夹名称作为版本号
          echo "Found folder: $FOLDER_NAME, version: $VERSION"
          echo ::set-output name=VERSION::$VERSION
          echo ::set-output name=FOLDER_NAME::$FOLDER_NAME
        shell: bash

      - name: Find files in the folder
        id: find_files
        run: |
          # 查找文件夹中的所有文件
          FOLDER_PATH="${{ steps.find_folder.outputs.FOLDER_NAME }}"
          if [ -d "$FOLDER_PATH" ]; then
            FILES=()
            for file in "$FOLDER_PATH"/*; do
              if [ -f "$file" ]; then
                FILES+=("$file")
              fi
            done
            echo "Found files: ${FILES[@]}"
            echo ::set-output name=FILES::"${FILES[@]}"
          else
            echo "Folder $FOLDER_PATH not found"
            exit 1
          fi
        shell: bash

      - name: Create ZIP file with required files
        id: create_zip
        run: |
          FOLDER_PATH="${{ steps.find_folder.outputs.FOLDER_NAME }}"
          ZIP_FILE="NetworkSetup-${{ steps.find_folder.outputs.VERSION }}.zip"
          zip -r $ZIP_FILE $FOLDER_PATH/*  # 打包文件夹中的所有文件
          echo ::set-output name=ZIP_FILE::$ZIP_FILE
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.find_folder.outputs.VERSION }}  # 使用版本号作为 Release 标签
          release_name: Release NetworkSetup ${{ steps.find_folder.outputs.VERSION }}
          body: |
            This release includes the following files for version ${{ steps.find_folder.outputs.VERSION }}:
            - NetworkSetup.exe
            - UpdateLogv5.0.htm
            - update.zip
          draft: false  # 发布为正式版本
          prerelease: false  # 不作为预发布版本

      - name: Upload ZIP file to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 从创建的 Release 获取上传 URL
          asset_path: ${{ steps.create_zip.outputs.ZIP_FILE }}  # 要上传的 ZIP 文件路径
          asset_name: ${{ steps.create_zip.outputs.ZIP_FILE }}  # 上传文件名
          asset_content_type: application/zip  # 设置文件类型为 ZIP
