name: Create Release

on:
  push:
    tags:
      - '版本*'  # 当推送带有版本前缀的标签时触发
  workflow_dispatch:  # 允许手动执行

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 获取完整的仓库历史

      - name: Get tag name
        id: get_tag_name
        run: |
          # 获取最新的标签名称
          TAG_NAME=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "tag_name=$TAG_NAME" >>$GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './版本-${{ env.TAG_NAME }}/羽华SMT快速编程系统NetworkSetup.exe'
          asset_name: "羽华SMT快速编程系统NetworkSetup${{ env.TAG_NAME }}.exe"
          asset_content_type: application/octet-stream
